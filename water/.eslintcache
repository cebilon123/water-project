[{"C:\\Users\\MichalPC\\water-project\\water\\src\\index.js":"1","C:\\Users\\MichalPC\\water-project\\water\\src\\reportWebVitals.js":"2","C:\\Users\\MichalPC\\water-project\\water\\src\\components\\map.jsx":"3","C:\\Users\\MichalPC\\water-project\\water\\src\\App.jsx":"4","C:\\Users\\MichalPC\\water-project\\water\\src\\components\\donate.jsx":"5"},{"size":504,"mtime":1609244362776,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1924,"mtime":1609242742117,"results":"9","hashOfConfig":"7"},{"size":1293,"mtime":1609251140848,"results":"10","hashOfConfig":"7"},{"size":255,"mtime":1609249914486,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yjm78f",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MichalPC\\water-project\\water\\src\\index.js",[],"C:\\Users\\MichalPC\\water-project\\water\\src\\reportWebVitals.js",[],["24","25"],"C:\\Users\\MichalPC\\water-project\\water\\src\\components\\map.jsx",["26"],"import React from 'react'\r\nimport {   ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    Sphere,\r\n    Graticule } from \"react-simple-maps\";\r\nimport Data from './csvjson.json'\r\n\r\n\r\n\r\nclass Map extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.dataOnYear = new Array()\r\n        Data.forEach(r => {\r\n            if(r.Year === 2015)\r\n                this.dataOnYear.push(r)\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return   <div>\r\n        <ComposableMap\r\n            projectionConfig={{\r\n            rotate: [-20, 0, 0],\r\n            scale: 90\r\n          }}>\r\n            <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n            <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n            <Geographies geography={\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n            var currentCountry = this.dataOnYear.find(c => c.Entity === geo.properties.NAME);  \r\n\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={this.getColorCodeBaseOnValue( currentCountry ? currentCountry.WaterPercent : 0)}/>\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n        </ComposableMap>\r\n      </div>\r\n    }\r\n\r\n    getColorCodeBaseOnValue = (val) => {\r\n        \r\n        console.log(val >= 0 )\r\n            if (val <= 10.0) \r\n                return \"#c7d4e2\"               \r\n            if (val <= 35.0)\r\n                return \"#a9c5e7\"                 \r\n            if(val <= 55.0)   \r\n                return \"#98b9e0\"              \r\n            if( val <= 85)\r\n                return \"#7eafeb\"                \r\n            if(val <= 100)     \r\n                return \"#2563af\"                \r\n        \r\n    }\r\n}\r\n\r\nexport default Map","C:\\Users\\MichalPC\\water-project\\water\\src\\App.jsx",["27"],"C:\\Users\\MichalPC\\water-project\\water\\src\\components\\donate.jsx",["28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":15,"column":27,"nodeType":"35","messageId":"36","endLine":15,"endColumn":38},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":6,"column":16,"nodeType":"43","endLine":6,"endColumn":49},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]